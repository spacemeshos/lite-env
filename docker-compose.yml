version: "3.7"

services:
  poet:
    container_name: poet
    image: spacemeshos/poet:develop
    env_file: ./defaults.env
    volumes:
      - ./Docker/poet/entrypoint.sh:/entrypoint.sh
    entrypoint: /entrypoint.sh
    logging:
      driver: fluentd
      options:
        tag: sm.{{.Name}}
    cap_add:
      - NET_ADMIN
    depends_on:
      - fluentbit
  
  bs_node:
    container_name: bs_node
    image: node
    build: ./Docker/node
    env_file: ./defaults.env
    volumes:
      - pk:/root/spacemesh/nodes
      - ./Docker/node/entrypoint.sh:/entrypoint.sh
    environment:
      - BOOTSTRAP_NODE=true
    entrypoint: /entrypoint.sh
    ports:
      # - 2020:2020
      - 9091:9091
      - 7513:7513
    logging:
      driver: fluentd
      options:
        tag: sm.{{.Name}}
    cap_add:
      - NET_ADMIN
    depends_on:
      - poet
  
  node:
    image: node
    env_file: ./defaults.env
    volumes:
      - pk:/root/spacemesh/pk:ro
      - ./Docker/node/entrypoint.sh:/entrypoint.sh
    entrypoint: /entrypoint.sh
    logging:
      driver: fluentd
      options:
        tag: sm.{{.Name}}
    cap_add:
      - NET_ADMIN
    depends_on:
      - bs_node
  
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - bootstrap.memory_lock=true
    ports:
      - 9200:9200
      - 9300:9300
  
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.5.1
    ports: 
      - 5601:5601
    depends_on:
      - elasticsearch
  
  cerebro:
    container_name: cerebro
    image: lmenezes/cerebro
    ports:
      - 9000:9000
    depends_on:
      - elasticsearch
    
  fluentbit:
    container_name: fluentbit
    image: fluent/fluent-bit
    volumes:
      - ./config/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./logs/fluentbit:/fluent-bit/etc/logs
    ports:
      - 24224:24224
      - 24224:24224/udp
    depends_on:
      - elasticsearch

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      # - dig +short node | awk '{printf (NR>1?":2020, ":"") $1}'
    ports:
      - 9999:9090
    depends_on:
      - node
  
  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    depends_on:
      - prometheus
      - elasticsearch

  curl:
    container_name: curl
    image: curlimages/curl
    command: tail -f /dev/null

volumes:
  pk:
